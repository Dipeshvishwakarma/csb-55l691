{"version":3,"sources":["redux/reducer/postSlice.js","UI/PostItem.jsx","components/Pagination.jsx","components/Home.jsx","components/ViewPost.jsx","components/EditPost.jsx","components/AddPost.jsx","components/Header.jsx","App.js","redux/store.js","index.js"],"names":["getPosts","createAsyncThunk","axios","get","response","postSlice","createSlice","name","initialState","posts","isLoading","reducers","setShowModal","state","action","showModal","payload","addPost","unshift","updatePost","map","post","id","title","body","deletePost","filter","console","log","extraReducers","pending","fulfilled","data","rejected","actions","PostItem","dispatch","useSelector","useDispatch","Card","style","width","margin","Body","Title","Text","to","Button","variant","marginLeft","float","onClick","marginRight","size","PaginationList","totalPage","currentPage","setCurrentPage","items","page","push","Pagination","Item","active","Prev","Next","ket","Home","useState","Math","ceil","length","lastIndex","startIndex","visiblePosts","slice","className","ViewPost","useParams","history","useHistory","Header","goBack","EditPost","setTitle","setBody","Form","Group","controlId","Label","Control","type","value","onChange","e","target","autoFocus","AddPost","userId","setUserId","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","App","useEffect","path","exact","component","store","configureStore","reducer","postReducer","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.1c0eea0c.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getPosts = createAsyncThunk(\"posts/getPosts\", async () => {\r\n  const response = await axios.get(\r\n    \"https://jsonplaceholder.typicode.com/posts\"\r\n  );\r\n  return response;\r\n});\r\n\r\nconst postSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState: {\r\n    posts: [],\r\n    isLoading: false\r\n  },\r\n  reducers: {\r\n    setShowModal: (state, action) => {\r\n      state.showModal = action.payload;\r\n    },\r\n    addPost: (state, action) => {\r\n      state.posts.unshift(action.payload);\r\n    },\r\n    updatePost: (state, action) => {\r\n      state.posts.map((post) => {\r\n        if (post.id === action.payload.id) {\r\n          post.title = action.payload.title;\r\n          post.body = action.payload.body;\r\n        }\r\n      });\r\n    },\r\n    deletePost: (state, action) => {\r\n      state.posts = state.posts.filter((post) => post.id !== action.payload.id);\r\n      console.log(\"after delete \", state.posts);\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [getPosts.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [getPosts.fulfilled]: (state, action) => {\r\n      state.posts = action.payload.data;\r\n      state.isLoading = false;\r\n    },\r\n    [getPosts.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  setShowModal,\r\n  addPost,\r\n  updatePost,\r\n  deletePost\r\n} = postSlice.actions;\r\nexport default postSlice.reducer;\r\n","import React from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deletePost } from \"../redux/reducer/postSlice\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostItem = ({ post }) => {\r\n  const show = useSelector((state) => state.posts.showModal);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <Card style={{ width: \"80vh\", margin: \"1rem\" }}>\r\n        <Card.Body>\r\n          <Card.Title>{`Post ${post.id}`}</Card.Title>\r\n          <Card.Text>{post.title}</Card.Text>\r\n          <Link to={`/EditPost/${post.id}`}>\r\n            <Button\r\n              variant=\"info\"\r\n              style={{ marginLeft: \"1rem\", float: \"left\", width: \"7rem\" }}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Link>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => dispatch(deletePost({ id: post.id }))}\r\n            style={{ marginRight: \"1rem\", float: \"right\", width: \"7rem\" }}\r\n          >\r\n            Delete\r\n          </Button>\r\n          <Link to={`/ViewPost/${post.id}`}>\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              size=\"lg\"\r\n              style={{ margin: \"1rem\", width: \"24rem\" }}\r\n            >\r\n              View Post\r\n            </Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import { Pagination } from \"react-bootstrap\";\r\n\r\nfunction PaginationList({ totalPage, currentPage, setCurrentPage }) {\r\n  const items = [];\r\n  for (let page = 1; page <= totalPage; page++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={page}\r\n        data-page={page}\r\n        active={page === currentPage}\r\n        onClick={() => setCurrentPage(page)}\r\n      >\r\n        {page}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n  return (\r\n    <Pagination style={{ marginLeft: \"3rem\" }}>\r\n      <Pagination.Prev\r\n        key=\"prev\"\r\n        onClick={() => setCurrentPage(currentPage - 1)}\r\n      />\r\n      {items}\r\n      <Pagination.Next\r\n        ket=\"next\"\r\n        onClick={() => setCurrentPage(currentPage + 1)}\r\n      />\r\n    </Pagination>\r\n  );\r\n}\r\n\r\nexport default PaginationList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PostItem from \"../UI/PostItem\";\r\nimport PaginationList from \"./Pagination\";\r\n\r\nconst Home = () => {\r\n  const posts = useSelector((state) => state.posts.posts);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const totalPage = Math.ceil(posts.length / 6);\r\n\r\n  const lastIndex = currentPage * 6;\r\n  const startIndex = lastIndex - 6;\r\n\r\n  const visiblePosts = posts.slice(startIndex, lastIndex);\r\n\r\n  // console.log(posts);\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        {visiblePosts.map((post) => (\r\n          <PostItem key={post.id} post={post} />\r\n        ))}\r\n      </div>\r\n      <PaginationList\r\n        totalPage={totalPage}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\n\r\nconst ViewPost = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  const post = posts[id - 1];\r\n  console.log(post);\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Card.Header>{`Post ${post?.id}`}</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{post?.title} </Card.Title>\r\n        <Card.Text>{post?.body}</Card.Text>\r\n        <Button variant=\"primary\" onClick={() => history.goBack()}>\r\n          Go Back\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ViewPost;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { updatePost } from \"../redux/reducer/postSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function EditPost() {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  const post = posts[id - 1];\r\n\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState(post?.title);\r\n  const [body, setBody] = useState(post?.body);\r\n\r\n  console.log(\"title\", title);\r\n\r\n  const handleSave = () => {\r\n    dispatch(updatePost({ id: post.id, title, body }));\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"test\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            autoFocus\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>body</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={body}\r\n            onChange={(e) => setBody(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <Button\r\n        variant=\"secondary\"\r\n        onClick={() => history.goBack()}\r\n        style={{ margin: \"1rem\" }}\r\n      >\r\n        Back\r\n      </Button>\r\n      <Button variant=\"primary\" onClick={handleSave}>\r\n        Save Changes\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { addPost } from \"../redux/reducer/postSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function AddPost() {\r\n  const history = useHistory();\r\n  const posts = useSelector((state) => state.posts.posts);\r\n\r\n  const dispatch = useDispatch();\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const id = posts[posts.length - 1]?.id + 1;\r\n  console.log(\"title\", title);\r\n\r\n  const handleSave = () => {\r\n    dispatch(addPost({ userId, id, title, body }));\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>UserId</Form.Label>\r\n          <Form.Control\r\n            type=\"test\"\r\n            value={userId}\r\n            onChange={(e) => setUserId(e.target.value)}\r\n            autoFocus\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"test\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            autoFocus\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>body</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={body}\r\n            onChange={(e) => setBody(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <Button variant=\"secondary\" onClick={() => history.goBack()}>\r\n        Back\r\n      </Button>\r\n      <Button variant=\"primary\" onClick={handleSave}>\r\n        Save Changes\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\n\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#home\">Home</Nav.Link>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./components/Home\";\nimport ViewPost from \"./components/ViewPost\";\nimport EditPost from \"./components/EditPost\";\nimport AddPost from \"./components/AddPost\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport { getPosts } from \"./redux/reducer/postSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, []);\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/ViewPost/:id\" component={ViewPost} />\n        <Route path=\"/EditPost/:id\" component={EditPost} />\n        <Route path=\"/AddPost\" component={AddPost} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport postReducer from './reducer/postSlice';\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        posts:postReducer,\r\n    }\r\n});\r\n\r\nexport default store;","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}